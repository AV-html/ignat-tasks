{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/JuniorPlus.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","m","message","avatar","src","alt","body","name","text","time","AlternativeMessage","messageData","alternativeMessageData1","alternativeMessageData2","alternativeMessageData3","HW1","Affair","affair","priority","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","key","_id","filter","styles","someClass","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyHandler","isEmptyInput","trim","inputClass","s","value","onKeyDown","onChange","onBlur","disabled","errorText","GreetingContainer","users","addUserCallback","setName","setError","newName","alert","length","e","currentTarget","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","defaultClass","checked","HW4","setText","showAlert","setChecked","column","blue","green","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","op","totalSelectClassName","select","SuperRadio","onChangeCallback","o","i","arr","HW7","homeWorkReducer","action","copyState","sort","b","toLowerCase","payload","reverse","console","log","u","age","initialPeople","HW8","people","setPeople","finalPeople","p","styleBackground","backgroundColor","style","PATH","Pages","path","element","to","Junior","JuniorPlus","Header","activeClassName","isActive","active","nav","list","item","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dba1a8d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1e6Eo\",\"avatar\":\"Message_avatar__27qbc\",\"body\":\"Message_body__38vA3\",\"name\":\"Message_name__2CUjR\",\"text\":\"Message_text__3ga52\",\"time\":\"Message_time__336OU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"AlternativeMessage_message__29Qhd\",\"body\":\"AlternativeMessage_body__c4PI4\",\"name\":\"AlternativeMessage_name__2sYrl\",\"avatar\":\"AlternativeMessage_avatar__2ZNb_\",\"text\":\"AlternativeMessage_text__1lXdz\",\"time\":\"AlternativeMessage_time__2sRGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__31iiN\",\"list\":\"Header_list__1D-yV\",\"item\":\"Header_item__1njtr\",\"active\":\"Header_active__3p1dw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__31hM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3SclI\",\"spanClassName\":\"SuperCheckbox_spanClassName__3KNhv\",\"defaultClass\":\"SuperCheckbox_defaultClass__wENJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__jE-Aa\",\"green\":\"HW4_green__3-SUA\",\"column\":\"HW4_column__2Dmxz\",\"testSpanError\":\"HW4_testSpanError__2RQah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2NCY_\",\"error\":\"Greeting_error__32fFd\",\"errorText\":\"Greeting_errorText__2kGn2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__164C6\",\"errorInput\":\"SuperInputText_errorInput__1fV0r\",\"error\":\"SuperInputText_error__3U1W1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__oucav\",\"red\":\"SuperButton_red__1x86h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2DoSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperEditableSpan_default__2k4QW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1Usr8\"};","import React from 'react'\nimport m from './Message.module.css';\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={m.message}>\n            <div className={m.avatar}>\n                <img src={props.avatar} alt=\" Avatar\"/>\n            </div>\n\n            <div className={m.body}>\n                <div className={m.name}>\n                    {props.name}\n                </div>\n                <div className={m.text}>\n                    {props.message}\n                    <span/>\n                </div>\n                <div className={m.time}>\n                    {props.time}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport m from \"./AlternativeMessage.module.css\";\n\ntype AlternativeMessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nfunction AlternativeMessage(props: AlternativeMessagePropsType) {\n    return (\n        <div className={m.message}>\n            <div className={m.avatar}>\n                <img src={props.avatar} alt=\" Avatar\"/>\n            </div>\n            <div className={m.body}>\n                <div className={m.name}>\n                    {props.name}\n                </div>\n                <div className={m.text}>\n                    {props.message}\n                    <span/>\n                </div>\n                <div className={m.time}>\n                    {props.time}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AlternativeMessage\n","import React from 'react'\nimport Message from \"./Message\";\nimport AlternativeMessage from \"./AlternativeMessage\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nconst alternativeMessageData1 = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Gacha Life',\n    message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa, quod consectetur dolors. Last symbol! ->',\n    time: '21:30',\n}\nconst alternativeMessageData2 = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Gacha Life',\n    message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Test text!',\n    time: '21:31',\n}\nconst alternativeMessageData3 = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Gacha Life',\n    message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Goodbye!',\n    time: '21:33',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n\n            {/* Изменение border-radius, в зависимости от расположения сообщений: первое, последнее или между.\n            Эксперементировал с редкими псевдоклассами, типа only-child\n\n            Не учтено: ширина поста может быть разная, если текст небольшой\n            */}\n            <div>\n                <AlternativeMessage\n                    avatar={alternativeMessageData1.avatar}\n                    name={alternativeMessageData1.name}\n                    message={alternativeMessageData1.message}\n                    time={alternativeMessageData1.time}\n                />\n                <AlternativeMessage\n                    avatar={alternativeMessageData2.avatar}\n                    name={alternativeMessageData2.name}\n                    message={alternativeMessageData2.message}\n                    time={alternativeMessageData2.time}\n                />\n                <AlternativeMessage\n                    avatar={alternativeMessageData3.avatar}\n                    name={alternativeMessageData3.name}\n                    message={alternativeMessageData3.message}\n                    time={alternativeMessageData3.time}\n                />\n            </div>\n\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2';\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: () => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback()\n    }// need to fix\n\n    return (\n        <div>\n            <span>\n                {props.affair.name}\n            </span>\n            <span>\n                {props.affair.priority}\n            </span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport styles from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={() => (props.deleteAffairCallback(a._id))}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n\n    return (\n        <div>\n            {mappedAffairs}\n\n            <button className={props.filter === 'all' ? styles.someClass : ''} onClick={setAll}>All</button>\n            <button className={props.filter === 'high' ? styles.someClass : ''} onClick={setHigh}>High</button>\n            <button className={props.filter === 'middle' ? styles.someClass : ''} onClick={setMiddle}>Middle</button>\n            <button className={props.filter === 'low' ? styles.someClass : ''} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    // if (filter === 'low') return affairs.filter((affair) => affair.priority === 'low')\n    // if (filter === 'middle') return affairs.filter((affair) => affair.priority === 'middle')\n    // if (filter === 'high') return affairs.filter((affair) => affair.priority === 'high')\n    // return affairs\n    return filter === 'all' ? affairs : affairs.filter((affair) => affair.priority === filter);\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(affair => affair._id !== _id)\n}\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n\n\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\n\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n    onKeyHandler: (e: React.KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onKeyHandler}\n) => {\n    const isEmptyInput = !name.trim();\n    const isNotError = !error;\n\n    const inputClass = isNotError ? '' : s.error;\n\n    return (\n        <div>\n            <input value={name}\n                   onKeyDown={onKeyHandler}\n                   onChange={setNameCallback}\n                   className={inputClass}\n                   onBlur={setNameCallback}\n            />\n            <button onClick={addUser} disabled={isEmptyInput}>add</button>\n            <span>{totalUsers}</span>\n            <div className={s.errorText}>{error}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const name = e.currentTarget.value\n\n        setName(name);\n        error && setError(''); // Обнулять ошибку, если она была!\n        name || setError('Invalid Value'); // Если имя пустое, то рисовать ошибку\n\n        // if (name) {\n        //     setName(name);\n        //     error && setError('');\n        // } else {\n        //     setName('')\n        //     setError('Invalid Value');\n        // }\n\n    }\n    const addUser = () => {\n        const newName = name.trim()\n        // if (newName) {\n        alert(`Hello ${newName}!`)\n        addUserCallback(newName)\n        setName('')\n        // }\n        // else {\n        //     setError('Invalid Value');\n        // }\n\n    }\n\n    const onKeyHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (name && e.key === 'Enter') {\n            addUser();\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyHandler={onKeyHandler}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        const newUser = {\n            _id: v1(),\n            name,\n        }\n        setUsers([...users, newUser]);\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = error ? `${s.errorInput} ${className}` : `${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : s.defaultClass}`\n\n    return (\n        <label className={finalInputClassName}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.checkbox}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    className={`${s.blue} ${s.green}`} // проверьте, работает ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n                {/* 3 стиля стандарт / удалить / выключенная */}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением необязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport styles from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n        setEditMode(false)\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n        setEditMode(true)\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${styles.default} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением необязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6';\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport {v1} from 'uuid';\nimport styles from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        className,\n        ...restProps\n    }\n) => {\n    const mappedOptions = options ? options.map((op) => {\n        return <option key={v1()} value={op}\n            // selected={restProps.value === op} // Не нужен!\n        >{op}</option>\n    }) : []\n\n\n    // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        onChange && onChange(e)\n\n        // onChange, onChangeOption\n        // onChange - e\n        // onChangeOption - value\n    }\n\n    const totalSelectClassName = styles.select + (\n        className\n            ? ' ' + className\n            : ''\n    )\n\n    return (\n        <select className={totalSelectClassName} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        onChange && onChange(e)\n\n        // onChange, onChangeOption\n        // onChange - e\n        // onChangeOption - какой option был выбран в радио-группе\n    }\n\n    // map options with key\n    const mappedOptions = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={value === o}\n                value={o}\n                onChange={onChangeCallback}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import {UserType} from '../HW8';\n\n\nexport type ActionType = SortAT | CheckAT\n\nexport type SortAT = {\n    type: 'sort',\n    payload: 'up' | 'down'\n}\nexport type CheckAT = {\n    type: 'check',\n    payload: number\n}\n\nexport const homeWorkReducer = (state: Array<UserType>, action: ActionType): Array<UserType> => { // need to fix any\n    switch (action.type) {\n        case 'sort': {\n\n            const copyState = [...state]\n            copyState.sort((a, b) => {\n                return a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1\n            })\n\n            action.payload === 'down' && copyState.reverse()\n\n            return copyState\n        }\n        case 'check': {\n            console.log(state.filter((u) => u.age >= action.payload))\n            return state.filter((u) => u.age >= action.payload)\n\n        }\n        default:\n            return state\n    }\n}","import React, {useState} from 'react'\nimport {homeWorkReducer} from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\nexport type UserType = {\n    _id: number,\n    name: string,\n    age: number\n}\n\nconst initialPeople: Array<UserType> = [\n    {_id: 0, name: 'Кот', age: 3},\n    {_id: 1, name: 'Александр', age: 66},\n    {_id: 2, name: 'Коля', age: 16},\n    {_id: 3, name: 'Виктор', age: 44},\n    {_id: 4, name: 'Дмитрий', age: 40},\n    {_id: 5, name: 'Ирина', age: 55},\n]\n\ntype FilterType = 'all' | 'sort-up' | 'sort-down' | 'check18+';\n\nfunction HW8() {\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    // need to fix any\n    const finalPeople = people.map((p) => (\n        <li key={p._id}>\n            <span>{p.name + ' ' + p.age}</span>\n        </li>\n    ))\n\n    const sortUp = () => {\n        setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\n        setFilter('sort-up')\n    }\n    const sortDown = () => {\n        setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\n        setFilter('sort-down')\n    }\n    const check = () => {\n        setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\n        setFilter('check18+')\n    }\n\n    const styleBackground = {\n        backgroundColor: '#90ee90'\n    }\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n            <ul>\n                {finalPeople}\n            </ul>\n\n\n            <div>\n                <SuperButton style={filter === 'sort-up' ? styleBackground : {}} onClick={sortUp}>\n                    sort up\n                </SuperButton>\n                <SuperButton style={filter === 'sort-down' ? styleBackground : {}} onClick={sortDown}>\n                    sort down\n                </SuperButton>\n                <SuperButton style={filter === 'check18+' ? styleBackground : {}} onClick={check}>\n                    check 18\n                </SuperButton>\n\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW8\n","import React from 'react'\r\nimport HW7 from '../../h7/HW7';\r\nimport HW8 from '../../h8/HW8';\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <h2>Junior</h2>\r\n            <HW7/>\r\n            <HW8/>\r\n            {/*<HW9/>*/}\r\n            {/*<HW10/>*/}\r\n            {/*<HW11/>*/}\r\n            {/*<HW12/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior","import React from 'react'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <h2>Rest homework</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior","import React from 'react'\nimport {Navigate, Route, Routes} from 'react-router-dom';\nimport PreJunior from './pages/PreJunior';\nimport Error404 from './pages/Error404';\nimport Junior from './pages/Junior';\nimport JuniorPlus from './pages/JuniorPlus';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior', // HW1-6\n    JUNIOR: '/junior', // HW7-11\n    JUNIOR_PLUS: '/junior-plus', // HW12-...\n    // add paths\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n                {/* add routes*/}\n\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from './Pages';\n\nimport styles from './Header.module.css';\n\n\nfunction Header() {\n    const activeClassName = ({isActive}: { isActive: boolean }) => (isActive ? styles.active : '');\n\n\n    return (\n        <nav className={styles.nav}>\n            <ul className={styles.list}>\n                <li className={styles.item}>\n                    <NavLink to={PATH.PRE_JUNIOR} className={activeClassName}>Pre Junior</NavLink>\n                </li>\n                <li className={styles.item}>\n                    <NavLink to={PATH.JUNIOR} className={activeClassName}>Junior</NavLink>\n                </li>\n                <li className={styles.item}>\n                    <NavLink to={PATH.JUNIOR_PLUS} className={activeClassName}>Junior+</NavLink>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from 'react-router-dom';\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n\n                <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from '../../../p2-homeworks/h5-rrd-v6/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5/>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}